version: '3'

services:

  webcrawlertwitter:
    build:
      context: .
      dockerfile: ./docker-imgs/webCrawlerTwitter.dockerfile
    container_name: webCrawlerTwitter
    restart: always
    
    networks:
      - production-network
    depends_on:
      - db

  db:
        image: mysql:5.7
        command: --character-set-server=utf8 --collation-server=utf8_unicode_ci
        command: --event-scheduler=ON
        container_name: mysql
        #volumes:
        #        - ./db_data:/var/lib/mysql
        environment:
                MYSQL_ROOT_PASSWORD: root
                MYSQL_DATABASE: sarg
                MYSQL_USER: root
                MYSQL_PASSWORD: root
        ports:
                - "3306"
        networks:
                - production-network
        restart: always
  web:
        build:
                context: .
                dockerfile: ./docker-imgs/sarg.dockerfile
        container_name: sarg
        command: bash -c "python manage.py makemigrations && python manage.py migrate && gunicorn sarg.wsgi -b 0.0.0.0:80"
        volumes:
                - ./sarg:/sarg
                - ./sarg/media/media/:/media/media
        expose:
                - "80"
        networks:
                - production-network
        restart: always
        depends_on:
                - db
  reverse-proxy:
        image: nginx:1.15.2
        container_name: nginx
        volumes:
                - ./sarg:/sarg
                - ./logs_nginx:/var/log/nginx
                - ./conf/nginx/etc/nginx/conf.d:/etc/nginx/conf.d
                - ./sarg/sarg/static:/static
        ports:
                - "80:80"
        networks:
                - production-network
        restart: always
        depends_on:
                - web
                  #  logstash:
                  #        build:
                  #                context: .
                  #                dockerfile: ./docker-imgs/logstash.dockerfile
                  #        container_name: logstash
                  #        volumes:
                  #                - ./conf/logstash/conf/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
                  #                - ./conf/logstash/conf/pipelines.yml:/usr/share/logstash/config/pipelines.yml:ro
                  #                - ./conf/logstash/pipeline:/usr/share/logstash/pipeline:ro
                  #                - ./conf/logstash/driver/sqljdbc_6.0/enu/jre8:/etc/logstash/driver/sqljdbc_6.0/enu/jre8
                  #                - ./conf/logstash/driver/mysql-connector-java-5.1.36:/etc/logstash/driver/mysql-connector-java-5.1.36
                  #                - ./logstash_data:/log
                  #        ports:
                  #                - "5000:5000"
                  #        environment:
                  #                LS_JAVA_OPTS: "-Xmx1024m -Xms1024m"
                  #        networks:
                  #                - production-network
                  #        depends_on:
  filebeat:
    build:
      context: .
      dockerfile: ./docker-imgs/filebeat.dockerfile
    container_name: filebeat
    volumes:
        - ./logs_nginx:/logs_nginx
    restart: always
    
    networks:
      - production-network
    depends_on:
      - reverse-proxy
                                
networks:                
        production-network:
                driver: bridge
